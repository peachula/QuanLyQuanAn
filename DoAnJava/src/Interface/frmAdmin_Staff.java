/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;

import Process.Staff;
import java.awt.event.MouseListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author kieef
 */
public class frmAdmin_Staff extends javax.swing.JInternalFrame {

    /**
     * Creates new form frmStaff
     */
    private final Staff staff = new Staff();

   
    private final DefaultTableModel tableModelStaff = new DefaultTableModel();
    
    public frmAdmin_Staff() throws SQLException{
        initComponents();
        setTitle("STAFF PAGE");
        
        ///setting for tbDetail
        String []colsName_Detail = {"ID","Tên Nhân Viên","Vai Trò","Mật Khẩu"};
        // đặt tiêu đề cột cho tableModel
        tableModelStaff.setColumnIdentifiers(colsName_Detail);
        tbStaff.setModel(tableModelStaff);
        ResultSet result = ShowStaff("all");
        ShowData(result);
        
        jComboBoxRole.addItem("Quản lý");
        jComboBoxRole.addItem("Chi nhánh trưởng");
        jComboBoxRole.addItem("Ca trưởng");
        jComboBoxRole.addItem("Nhân viên full-time");
        jComboBoxRole.addItem("Nhân viên part-time");
        jComboBoxRole.setSelectedIndex(3);
        
        btnDelete.setEnabled(false);
        btnSave.setEnabled(false);
        BasicInternalFrameUI bs = ((javax.swing.plaf.basic.BasicInternalFrameUI) this.getUI());
        for (MouseListener l: bs.getNorthPane().getMouseListeners()){
            bs.getNorthPane().removeMouseListener(l);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel9 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        txtPassword = new javax.swing.JPasswordField();
        jComboBoxRole = new javax.swing.JComboBox<>();
        jPanel10 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbStaff = new javax.swing.JTable();
        jPanel8 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        btnAdd = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        btnSearch = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();

        setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        setMaximumSize(new java.awt.Dimension(100, 563));
        setMinimumSize(new java.awt.Dimension(100, 563));
        setNextFocusableComponent(this);
        setPreferredSize(new java.awt.Dimension(809, 536));
        getContentPane().setLayout(new java.awt.BorderLayout(5, 0));

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));
        jPanel9.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
        jPanel9.setLayout(new java.awt.BorderLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("INFORMATION"));

        jLabel1.setText("ID");

        jLabel2.setText("Name");

        jLabel3.setText("Role");

        jLabel4.setText("Pasword");

        txtID.setEnabled(false);

        txtPassword.setText("jPasswordField1");

        jComboBoxRole.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxRoleActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(103, 103, 103)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtID)
                    .addComponent(txtName, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE))
                .addGap(130, 130, 130)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 197, Short.MAX_VALUE)
                    .addComponent(jComboBoxRole, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(53, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxRole, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel9.add(jPanel1, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel9, java.awt.BorderLayout.PAGE_START);

        jPanel10.setBackground(new java.awt.Color(255, 255, 255));
        jPanel10.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
        jPanel10.setLayout(new java.awt.BorderLayout());

        tbStaff.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Name", "Role"
            }
        ));
        tbStaff.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbStaffMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbStaff);

        jPanel10.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel10, java.awt.BorderLayout.CENTER);

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
        jPanel8.setPreferredSize(new java.awt.Dimension(807, 90));
        jPanel8.setLayout(new java.awt.BorderLayout());

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setPreferredSize(new java.awt.Dimension(400, 70));
        jPanel2.setLayout(new java.awt.GridLayout(1, 0));

        btnAdd.setBackground(new java.awt.Color(237, 163, 35));
        btnAdd.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnAdd.setForeground(new java.awt.Color(255, 255, 255));
        btnAdd.setText("ADD");
        btnAdd.setBorderPainted(false);
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        jPanel2.add(btnAdd);

        btnSave.setBackground(new java.awt.Color(237, 163, 35));
        btnSave.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnSave.setForeground(new java.awt.Color(255, 255, 255));
        btnSave.setText("SAVE");
        btnSave.setBorderPainted(false);
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        jPanel2.add(btnSave);

        btnDelete.setBackground(new java.awt.Color(237, 163, 35));
        btnDelete.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnDelete.setForeground(new java.awt.Color(255, 255, 255));
        btnDelete.setText("DELETE");
        btnDelete.setBorderPainted(false);
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        jPanel2.add(btnDelete);

        btnClear.setBackground(new java.awt.Color(237, 163, 35));
        btnClear.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnClear.setForeground(new java.awt.Color(255, 255, 255));
        btnClear.setText("CLEAR");
        btnClear.setBorderPainted(false);
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });
        jPanel2.add(btnClear);

        jPanel8.add(jPanel2, java.awt.BorderLayout.LINE_END);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("SEARCH"));
        jPanel3.setLayout(new java.awt.BorderLayout());

        btnSearch.setBackground(new java.awt.Color(237, 163, 35));
        btnSearch.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnSearch.setForeground(new java.awt.Color(255, 255, 255));
        btnSearch.setText("SEARCH");
        btnSearch.setBorderPainted(false);
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });
        jPanel3.add(btnSearch, java.awt.BorderLayout.LINE_END);

        jTextField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jPanel3.add(jTextField1, java.awt.BorderLayout.CENTER);

        jPanel8.add(jPanel3, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel8, java.awt.BorderLayout.PAGE_END);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        try {
            // TODO add your handling code here: 
            String Name = txtName.getText();
            String Pass = txtPassword.getText();
            String staff_role = jComboBoxRole.getItemAt(jComboBoxRole.getSelectedIndex());
            staff_role = staff_role.toLowerCase();
            int role =4;
            switch(staff_role)
            {
                case "quản lý":    
                    role =0;
                    break;
                case "chi nhánh trưởng":    
                    role =1;
                    break;
                case "ca trưởng":    
                    role =2;
                    break;
                case "nhân viên full-time":    
                    role =3;
                    break;
                default:
                    role = 4;
            }
            if(CheckInput()== true)
            {
                staff.InsertStaff(Name, role, Pass);
                JOptionPane.showMessageDialog(this, "ADD SUCCESS!!!");
            }
            else{
                JOptionPane.showMessageDialog(this, "PLEASE FILL ALL THE BLANK");
            }
            ResultSet result = ShowStaff("all");
            ShowData(result);
            
            txtID.setText("");
            txtName.setText("");
            txtPassword.setText("");
            btnDelete.setEnabled(false);
            btnSave.setEnabled(false);
            txtID.setEditable(false);
        } catch (SQLException ex) {
            Logger.getLogger(frmAdmin_Staff.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        try {
            // TODO add your handling code here:           
            ResultSet result = ShowStaff("name");                
            ShowData(result);
        } catch (SQLException ex) {
            Logger.getLogger(frmAdmin_Staff.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
         try {
            // TODO add your handling code here:
            int row =this.tbStaff.getSelectedRow();
            String staff_id= (this.tbStaff.getModel().getValueAt(row,0)).toString(); //lấy id từ cột số 0 trong tabe
            String staff_role = (this.tbStaff.getModel().getValueAt(row,2)).toString();
            staff_role = staff_role.toLowerCase();
            
            if(staff_role.equalsIgnoreCase("quản lý"))
            {
                JOptionPane.showMessageDialog(this,"Không thể xóa quản lý");
            }
            else{
                int ret= JOptionPane.showConfirmDialog(this, "Chắc chắn xóa", "Xóa nhân viên", JOptionPane.YES_NO_OPTION);
                if(ret == JOptionPane.YES_OPTION)
                {
                    staff.DeleteStaff(staff_id);
                    ResultSet result = ShowStaff("all");
                    ShowData(result);
                }
                
            }
            
            txtID.setEditable(false);          
            btnAdd.setEnabled(true);
            btnDelete.setEnabled(false);
            btnSave.setEnabled(false);
            txtID.setText("");
            txtName.setText("");
            txtPassword.setText("");
            jComboBoxRole.setSelectedIndex(3);
        } catch (SQLException ex) {
            Logger.getLogger(frmAdmin_Staff.class.getName()).log(Level.SEVERE, null, ex);
        }
       
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
        txtID.setText("");
        txtName.setText("");
        txtPassword.setText("");
        btnAdd.setEnabled(true);
        btnDelete.setEnabled(false);
        btnSave.setEnabled(false);
        jComboBoxRole.setSelectedIndex(3);
    }//GEN-LAST:event_btnClearActionPerformed

    private void tbStaffMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbStaffMouseClicked
        // TODO add your handling code here:
        int row =this.tbStaff.getSelectedRow();
        String staff_id= (this.tbStaff.getModel().getValueAt(row,0)).toString(); //lấy id từ cột số 0 trong tabe
        String staff_name= (this.tbStaff.getModel().getValueAt(row,1)).toString();
        String staff_role= (this.tbStaff.getModel().getValueAt(row,2)).toString();
        String staff_pass= (this.tbStaff.getModel().getValueAt(row,3)).toString();
        staff_role = staff_role.toLowerCase();
        int role =4;
            switch(staff_role)
            {
                case "quản lý":    
                    role =0;
                    break;
                case "chi nhánh trưởng":    
                    role =1;
                    break;
                case "ca trưởng":    
                    role =2;
                    break;
                case "nhân viên full-time":    
                    role =3;
                    break;
                default:
                    role = 4;
            }
        
        jComboBoxRole.setSelectedIndex(role);
        txtID.setText(staff_id);
        txtName.setText(staff_name);     
        
        txtPassword.setText(staff_pass);
        
        btnAdd.setEnabled(false);
        btnDelete.setEnabled(true);
        btnSave.setEnabled(true);
    }//GEN-LAST:event_tbStaffMouseClicked

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        try {
            String staff_id= txtID.getText();
            String staff_name= txtName.getText();
            String staff_role = jComboBoxRole.getItemAt(jComboBoxRole.getSelectedIndex());
            staff_role = staff_role.toLowerCase();
            staff_role = staff_role.toLowerCase();
            String staff_pass = new String(txtPassword.getPassword()); 
            int role =4;
            switch(staff_role)
            {
                case "quản lý":    
                    role =0;
                    break;
                case "chi nhánh trưởng":    
                    role =1;
                    break;
                case "ca trưởng":    
                    role =2;
                    break;
                case "nhân viên full-time":    
                    role =3;
                    break;
                default:
                    role = 4;
            }
            staff.EditStaff(Integer.parseInt(staff_id), staff_name, role, staff_pass);
            ResultSet result = ShowStaff("all");
            ShowData(result);
            
           btnSave.setEnabled(false);
           btnDelete.setEnabled(false);
           btnAdd.setEnabled(true);
        } catch (SQLException ex) {
            Logger.getLogger(frmAdmin_Staff.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_btnSaveActionPerformed

    private void jComboBoxRoleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxRoleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxRoleActionPerformed

    private ResultSet ShowStaff(String statment) throws SQLException
    {
       
            tableModelStaff.getDataVector().removeAllElements();
            ResultSet result = null;
            switch(statment)
            {
                case "name":
                    String staff_name = jTextField1.getText();
                    result = staff.Staff_Name(staff_name); 
                    break;
                
                case "all":
                    result = staff.Staff();
                    break;
                default:
                    result= null;
                    break;
            }
        return result;

    }
    private void ShowData(ResultSet result)
    {
        try {            
            while(result.next()){ // nếu còn đọc tiếp được một dòng dữ liệu
                String rows[] = new String[4];
                rows[0] = result.getString(1);
                rows[1] = result.getString(2);
                String temp_r = result.getString(3);
                switch(temp_r){
                    case "0":
                        rows[2] = "Quản lý";
                        break;
                    case "1":
                        rows[2] = "Chi nhánh trưởng";
                        break;
                    case "2":
                        rows[2] = "Ca trưởng";
                        break;  
                    case "3":
                        rows[2] = "Nhân viên full-time";
                        break;  
                    case "4":
                        rows[2] = "Nhân viên part-time";
                        break;  
                      
                }
                rows[3] =  result.getString(4);     
                tableModelStaff.addRow(rows); // đưa dòng dữ liệu vào tableModel
            //mỗi lần có sự thay đổi dữ liệu ở tableModel thì Jtable sẽ tự động update
            }
            System.out.println("Đọc xong data");
        }
           catch (SQLException e) {
            System.out.println(e);
        }
    }
    private boolean CheckInput()
    {
        String staff_name= txtName.getText();  
        
        if(staff_name != null && !staff_name.trim().isEmpty())
        {
             return true;        
        }
        return false;
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSearch;
    private javax.swing.JComboBox<String> jComboBoxRole;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTable tbStaff;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtName;
    private javax.swing.JPasswordField txtPassword;
    // End of variables declaration//GEN-END:variables
}
